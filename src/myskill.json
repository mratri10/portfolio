{
    "myskills":[
        {
            "name":"React Native",
            "since":"11-11-2019",
            "status":"Expert",
            "type":"Mobile Developer",
            "company":[
                {
                    "id":3,
                    "name":"PT Arnawa Teknologi Informasi"
                },
                {
                    "id":4,
                    "name":"PT Multiartha Prima Sejahtera"
                },
                {
                    "id":6,
                    "name":"PT Andhara Prima Kreatif"
                },
                {
                    "id":7,
                    "name":"PT Pedepokan 79"
                }
            ],

            "skills":[
                {
                    "title":"React Native Core",
                    "description":[
                        "Component Lifecycle: Memahami fungsi dan siklus hidup komponen React Native.",
                        "State Management: Menggunakan useState, useReducer, dan Context API.",
                        "Hooks: Mendalam dalam penggunaan useEffect, useRef, useCallback, useMemo, dll.",
                        "Styling: Menguasai styling dengan StyleSheet, Flexbox, serta pustaka seperti styled-components atau Emotion.",
                        "Navigation: Menggunakan pustaka seperti React Navigation dan memahami konsep stack, tab, dan drawer navigation.",
                        "Performance Optimization: Mengoptimalkan aplikasi menggunakan React.memo, FlatList optimization, dll."
                    ]
                },
                {
                    "title":"Advanced JavaScript/TypeScript",
                    "description":[
                        "Functional Programming: Immutability, higher-order functions seperti map, reduce, filter.",
                        "TypeScript: Menulis kode yang aman menggunakan tipe, interface, dan generics."
                    ]
                },
                {
                    "title":"Native Modules",
                    "description":[
                        "Bridge: Membuat jembatan (bridge) antara kode JavaScript dengan modul native (Android/Java dan iOS/Swift/Obj-C).",
                        "Integrasi Library Native: Memahami cara mengintegrasikan pustaka pihak ketiga yang memerlukan kode native."    
                    ]
                },
                {
                    "title":"Mobile Development Practices",
                    "description":[
                        "UI/UX Mobile: Memahami prinsip desain mobile, seperti responsivitas, pixel density, dan user-friendly layouts.",
                        "APIs & Networking: Menggunakan pustaka seperti axios atau fetch, serta mengelola status loading, error, dan retry.",
                        "Offline Handling: Cache data dengan AsyncStorage dan SQLite.",
                        "Notifications: Integrasi push notifications menggunakan Firebase."      
                    ]
                },
                {
                    "title":"State Management",
                    "description":[
                        "Redux: Pengelolaan state global menggunakan Redux Toolkit, Middleware.",
                        "MobX: Alternatif manajemen state yang lebih modern."  
                    ]
                },
                {
                    "title":"Debugging & Profiling",
                    "description":[
                        "React Native Debugger: Menggunakan devtools bawaan atau eksternal",
                        "Performance Profiling: Analisis waktu rendering dan penggunaan memori",
                        "Crashlytics/Monitoring: Integrasi layanan seperti Firebase Crashlytics" 
                    ]
                },
                {
                    "title":"Continuous Integration & Deployment (CI/CD)",
                    "description":[
                        "App Store Deployment: Mengelola proses build, signing, dan upload ke Play Store"
                    ]
                },
                {
                    "title":"Security",
                    "description":[
                        "Data Encryption: Memastikan data sensitif dienkripsi",
                        "Authentication: Mengintegrasikan sistem autentikasi seperti OAuth, Firebase Auth, atau Auth0",
                        "App Hardening: Mengurangi kerentanan aplikasi terhadap reverse engineering." 
                    ]
                },
                {
                    "title":"Soft Skills",
                    "description":[
                        "Code Review: Memberikan masukan konstruktif dalam review PR",
                        "Leadership: Membimbing junior developer.",
                        "Problem Solving: Kemampuan menganalisis dan menyelesaikan masalah secara efisien.",
                        "Team Collaboration: Berkomunikasi secara efektif dengan desainer, backend engineer, dan PM."
                    ]
                }
            ]
        },
        {
            "name":"Flutter",
            "since":"06-08-2018",
            "status":"Intermediate ",
            "type":"Mobile Developer",
            "company":[
                {
                    "id":1,
                    "name":"PT Medisoft International"
                },{
                    "id":5,
                    "name":"PT Nityo Infotech"
                }
            ],

            "skills":[
                {
                    "title":"Pemahaman Mendalam Flutter",
                    "description":[
                        "Widget Hierarchy: Memahami widget stateless dan stateful",
                        "Custom Widgets: Membuat widget yang dapat digunakan kembali dan scalable.",
                        "Layouts: Menguasai layout seperti Row, Column, Stack, dan Flex"
                    ]
                },
                {
                    "title":"State Management",
                    "description":[
                        "Inherently Flutter: Memanfaatkan setState, InheritedWidget, dan Provider.",
                        "Bloc/Cubit: Untuk arsitektur berbasis event-driven."
                    ]
                },
                {
                    "title":"Advanced Dart Programming",
                    "description":[
                        "Null Safety: Memastikan kode aman dari null-pointer exceptions.",
                        "Asynchronous Programming: Menggunakan Future, async/await, dan Stream.",
                        "Functional Programming: Menggunakan higher-order functions seperti map, reduce, where."
                    ]
                },
                {
                    "title":"UI/UX Development",
                    "description":[
                        "Theming: Mengelola tema aplikasi global dengan ThemeData.",
                        "Penyesuaian layout menggunakan MediaQuery dan pustaka seperti flutter_screenutil.",
                        "Menyediakan dukungan untuk berbagai ukuran layar dan orientasi."
                    ]
                },
                {
                    "title":"API Integration",
                    "description":[
                        "Menggunakan pustaka seperti http",
                        "RESTful APIs: Memahami metode HTTP (GET, POST, PUT, DELETE) dan format JSON."
                    ]
                },
                {
                    "title":"Database dan Storage",
                    "description":[
                        "SQLite dengan sqflite.",
                        "Firebase Firestore.",
                        "Penyimpanan data sensitif menggunakan flutter_secure_storage atau Keychain/Keystore."
                    ]
                },
                {
                    "title":"Testing",
                    "description":[
                        "Unit Testing: Menguji logika bisnis dengan mocktail dan mockito",
                        "Widget Testing: Menguji UI dan interaksi widget.",
                        "Integration Testing: Menggunakan integration_test"
                    ]
                },
                {
                    "title":"Mobile Development Practices",
                    "description":[
                        "Offline Mode: Mengelola data cache dan sinkronisasi.",
                        "Notifications: Integrasi push notifications dengan Firebase"
                    ]
                },
                {
                    "title":"Mobile Development Practices",
                    "description":[
                        "Team Collaboration: Berkomunikasi dengan desainer, backend engineer, dan QA.",
                        "Problem Solving: Memecahkan masalah teknis dengan solusi yang efisien."
                    ]
                }
            ]
        },
        {
            "name":"Android Native",
            "since":"04-03-2019",
            "status":"Intermediate ",
            "type":"Mobile Developer",
            "company":[
                {
                    "id":5,
                    "name":"PT FAN Integrasi Teknologi"
                }
            ],

            "skills":[
                {
                    "title":"Pemahaman Dasar Android",
                    "description":[
                        "Activity dan Fragment lifecycle.",
                        "Intent (explicit dan implicit).",
                        "Services (foreground, background, dan bound services).",
                        "Broadcast Receivers dan Content Providers."
                    ]
                },
                {
                    "title":"UI Design",
                    "description":[
                        "Membuat layout dengan XML",
                        "View components seperti RecyclerView, CardView, dan ConstraintLayout.",
                        "Menyesuaikan UI untuk berbagai ukuran layar dan orientasi.",
                        "Mengikuti prinsip Material Design untuk UI/UX.",
                        "Penggunaan komponen seperti BottomNavigationView, FloatingActionButton, dll."
                    ]
                },
                {
                    "title":"Advanced Kotlin Programming",
                    "description":[
                        "Extensions: Memanfaatkan extension functions untuk menambahkan fitur pada kelas",
                        "Coroutines: Mengelola operasi asynchronous menggunakan launch, async, withContext."
                    ]
                },
                {
                    "title":"Advanced Java Programming",
                    "description":[
                        "Concurrency: Menggunakan Thread, ExecutorService, dan AsyncTask (meskipun sudah deprecated).",
                        "Collections Framework: Menguasai penggunaan List, Map, Set, dan Stream API.",
                        "Generics: Membuat kelas atau metode yang fleksibel dengan tipe dinamis."
                    ]
                },
                {
                    "title":"Architecture and Patterns",
                    "description":[
                        "Modern Android Architecture: MVVM (Model-View-ViewModel).",
                        "ViewModel: Mengelola state UI.",
                        "Room Database: Membuat database lokal dengan SQLite.",
                        "Design Patterns: Singleton, Factory, Observer, dan Repository."
                    ]
                },
                {
                    "title":"Networking dan Data Handling",
                    "description":[
                        "Menggunakan Retrofit untuk REST API.",
                        "Penanganan HTTP dengan OkHttp.",
                        "Menggunakan Gson atau Kotlin Serialization.",
                        "Cache data menggunakan Room atau SharedPreferences."
                    ]
                },
                {
                    "title":"Deployment",
                    "description":[
                        "Menggunakan Gradle untuk mengelola dependensi dan konfigurasi build.",
                        "Mengelola keystore, signing, dan penerbitan aplikasi.",
                        "Menggunakan App Distribution tools seperti Firebase App Distribution."
                    ]
                },
                {
                    "title":"Security",
                    "description":[
                        "Mengintegrasikan OAuth2, Firebase Auth, atau solusi login berbasis token.",
                        "Menambahkan ProGuard atau Dexguard untuk melindungi kode."
                    ]
                },
                {
                    "title":"Cloud Integration",
                    "description":[
                        "Menggunakan Realtime Database, Firestore, dan Cloud Messaging.",
                        "Menambahkan layanan seperti video call dan maps"
                    ]
                },
                {
                    "title":"Soft Skills",
                    "description":[
                        "Problem Solving: Menyelesaikan masalah yang kompleks secara efisien.",
                        "Team Collaboration: Berkomunikasi dengan desainer, backend engineer, dan QA."
                    ]
                }
            ]
        },
        {
            "name":"Spring Boot",
            "since":"26-02-2024",
            "status":"Intermediate",
            "type":"Back End Developer",
            "company":[
                {
                    "id":7,
                    "name":"PT Pedepokan 79"
                }
            ],

            "skills":[
                {
                    "title":"Pemahaman Mendalam Spring Framework",
                    "description":[
                        "Spring Core: Konsep dasar seperti IoC (Inversion of Control), Dependency Injection, Bean Lifecycle.",
                        "Spring MVC: Memahami konsep RESTful API, handler methods, dan model binding",
                        "Spring Data JPA: Menggunakan Hibernate, Entity relationships, JPQL, Criteria API, dan query optimization.",
                        "Spring MVC: Memahami konsep RESTful API, handler methods, dan model binding."
                    ]
                },
                {
                    "title":"Database Management",
                    "description":[
                        "Relational Databases: Menggunakan database seperti MySQL. Memahami normalization dan indexing.",
                        "NoSQL Databases: Integrasi dengan MongoDB dan Redis."
                    ]
                },
                {
                    "title":"Microservices Architecture",
                    "description":[
                        "Service Communication: Menggunakan Dubbo untuk komunikasi antar service."
                    ]
                },
                {
                    "title":"Testing",
                    "description":[
                        "Unit Testing: Menggunakan JUnit dan Mockito untuk pengujian komponen."
         
                    ]
                },
                {
                    "title":"Soft Skills",
                    "description":[
                        "Problem Solving: Mengatasi masalah yang kompleks dengan solusi yang efisien."
                    ]
                }
            ]
        },
        {
           "name":"React TS/JS",
            "since":"03-02-2019",
            "status":"Intermediate ",
            "type":"Web Developer" 
        },
        {
            "name":"Express JS",
            "since":"05-06-2023",
            "status":"Beginner ",
            "type":"Back End Developer" 
        },
        {
            "name":"Codeigniter",
            "since":"03-06-2019",
            "status":"Intermediate ",
            "type":"Fullstack Developer" 
        },
        {
            "name":"Laravel",
            "since":"03-02-2019",
            "status":"Intermediate ",
            "type":"Fullstack Developer" 
        }
    ]
}